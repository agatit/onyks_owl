// tslint:disable
/**
 * Onyks Wagon Location API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  ModuleDef,
  ModuleDefFromJSON,
  ModuleDefToJSON,
  Project,
  ProjectFromJSON,
  ProjectToJSON,
  Queue,
  QueueFromJSON,
  QueueToJSON,
} from ".";

/**
 * List of modules defined in specified config.json
 * @export
 * @interface Module
 */
export interface Module {
  /**
   *
   * @type {string}
   * @memberof Module
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof Module
   */
  moduleDefId: string;
  /**
   *
   * @type {string}
   * @memberof Module
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof Module
   */
  comment?: string;
  /**
   *
   * @type {ModuleDef}
   * @memberof Module
   */
  moduleDef?: ModuleDef;
  /**
   *
   * @type {Project}
   * @memberof Module
   */
  project?: Project;
  /**
   *
   * @type {Queue}
   * @memberof Module
   */
  input?: Queue;
  /**
   *
   * @type {Queue}
   * @memberof Module
   */
  output?: Queue;
}

export function ModuleFromJSON(json: any): Module {
  return {
    id: json["id"],
    moduleDefId: json["module_def_id"],
    name: !exists(json, "name") ? undefined : json["name"],
    comment: !exists(json, "comment") ? undefined : json["comment"],
    moduleDef: !exists(json, "module_def")
      ? undefined
      : ModuleDefFromJSON(json["module_def"]),
    project: !exists(json, "project")
      ? undefined
      : ProjectFromJSON(json["project"]),
    input: !exists(json, "input") ? undefined : QueueFromJSON(json["input"]),
    output: !exists(json, "output") ? undefined : QueueFromJSON(json["output"]),
  };
}

export function ModuleToJSON(value?: Module): any {
  if (value === undefined) {
    return undefined;
  }
  return {
    id: value.id,
    module_def_id: value.moduleDefId,
    name: value.name,
    comment: value.comment,
    module_def: ModuleDefToJSON(value.moduleDef),
    project: ProjectToJSON(value.project),
    input: QueueToJSON(value.input),
    output: QueueToJSON(value.output),
  };
}
