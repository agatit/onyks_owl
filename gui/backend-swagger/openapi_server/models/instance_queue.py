# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.instance import Instance
from openapi_server.models.queue import Queue
from openapi_server import util

from openapi_server.models.instance import Instance  # noqa: E501
from openapi_server.models.queue import Queue  # noqa: E501

class InstanceQueue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, project_instance=None, queue=None):  # noqa: E501
        """InstanceQueue - a model defined in OpenAPI

        :param id: The id of this InstanceQueue.  # noqa: E501
        :type id: str
        :param project_instance: The project_instance of this InstanceQueue.  # noqa: E501
        :type project_instance: Instance
        :param queue: The queue of this InstanceQueue.  # noqa: E501
        :type queue: Queue
        """
        self.openapi_types = {
            'id': str,
            'project_instance': Instance,
            'queue': Queue
        }

        self.attribute_map = {
            'id': 'id',
            'project_instance': 'project_instance',
            'queue': 'queue'
        }

        self._id = id
        self._project_instance = project_instance
        self._queue = queue

    @classmethod
    def from_dict(cls, dikt) -> 'InstanceQueue':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InstanceQueue of this InstanceQueue.  # noqa: E501
        :rtype: InstanceQueue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this InstanceQueue.


        :return: The id of this InstanceQueue.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InstanceQueue.


        :param id: The id of this InstanceQueue.
        :type id: str
        """

        self._id = id

    @property
    def project_instance(self):
        """Gets the project_instance of this InstanceQueue.


        :return: The project_instance of this InstanceQueue.
        :rtype: Instance
        """
        return self._project_instance

    @project_instance.setter
    def project_instance(self, project_instance):
        """Sets the project_instance of this InstanceQueue.


        :param project_instance: The project_instance of this InstanceQueue.
        :type project_instance: Instance
        """

        self._project_instance = project_instance

    @property
    def queue(self):
        """Gets the queue of this InstanceQueue.


        :return: The queue of this InstanceQueue.
        :rtype: Queue
        """
        return self._queue

    @queue.setter
    def queue(self, queue):
        """Sets the queue of this InstanceQueue.


        :param queue: The queue of this InstanceQueue.
        :type queue: Queue
        """

        self._queue = queue
