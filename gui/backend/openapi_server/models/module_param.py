# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.module import Module
from openapi_server.models.module_param_def import ModuleParamDef
from openapi_server import util

from openapi_server.models.module import Module  # noqa: E501
from openapi_server.models.module_param_def import ModuleParamDef  # noqa: E501

class ModuleParam(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, module=None, param_def=None, value=None):  # noqa: E501
        """ModuleParam - a model defined in OpenAPI

        :param module: The module of this ModuleParam.  # noqa: E501
        :type module: Module
        :param param_def: The param_def of this ModuleParam.  # noqa: E501
        :type param_def: ModuleParamDef
        :param value: The value of this ModuleParam.  # noqa: E501
        :type value: str
        """
        self.openapi_types = {
            'module': Module,
            'param_def': ModuleParamDef,
            'value': str
        }

        self.attribute_map = {
            'module': 'module',
            'param_def': 'param_def',
            'value': 'value'
        }

        self._module = module
        self._param_def = param_def
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'ModuleParam':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModuleParam of this ModuleParam.  # noqa: E501
        :rtype: ModuleParam
        """
        return util.deserialize_model(dikt, cls)

    @property
    def module(self):
        """Gets the module of this ModuleParam.


        :return: The module of this ModuleParam.
        :rtype: Module
        """
        return self._module

    @module.setter
    def module(self, module):
        """Sets the module of this ModuleParam.


        :param module: The module of this ModuleParam.
        :type module: Module
        """

        self._module = module

    @property
    def param_def(self):
        """Gets the param_def of this ModuleParam.


        :return: The param_def of this ModuleParam.
        :rtype: ModuleParamDef
        """
        return self._param_def

    @param_def.setter
    def param_def(self, param_def):
        """Sets the param_def of this ModuleParam.


        :param param_def: The param_def of this ModuleParam.
        :type param_def: ModuleParamDef
        """

        self._param_def = param_def

    @property
    def value(self):
        """Gets the value of this ModuleParam.


        :return: The value of this ModuleParam.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ModuleParam.


        :param value: The value of this ModuleParam.
        :type value: str
        """

        self._value = value
