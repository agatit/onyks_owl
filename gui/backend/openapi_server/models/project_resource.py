# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.module import Module
from openapi_server import util

from openapi_server.models.module import Module  # noqa: E501

class ProjectResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project=None, url=None):  # noqa: E501
        """ProjectResource - a model defined in OpenAPI

        :param project: The project of this ProjectResource.  # noqa: E501
        :type project: Module
        :param url: The url of this ProjectResource.  # noqa: E501
        :type url: file
        """
        self.openapi_types = {
            'project': Module,
            'url': file
        }

        self.attribute_map = {
            'project': 'project',
            'url': 'url'
        }

        self._project = project
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'ProjectResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProjectResource of this ProjectResource.  # noqa: E501
        :rtype: ProjectResource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project(self):
        """Gets the project of this ProjectResource.


        :return: The project of this ProjectResource.
        :rtype: Module
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ProjectResource.


        :param project: The project of this ProjectResource.
        :type project: Module
        """

        self._project = project

    @property
    def url(self):
        """Gets the url of this ProjectResource.


        :return: The url of this ProjectResource.
        :rtype: file
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ProjectResource.


        :param url: The url of this ProjectResource.
        :type url: file
        """

        self._url = url
