# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.instance import Instance
from openapi_server.models.module import Module
from openapi_server import util

from openapi_server.models.instance import Instance  # noqa: E501
from openapi_server.models.module import Module  # noqa: E501

class InstanceModule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, project_instance=None, module=None):  # noqa: E501
        """InstanceModule - a model defined in OpenAPI

        :param id: The id of this InstanceModule.  # noqa: E501
        :type id: str
        :param project_instance: The project_instance of this InstanceModule.  # noqa: E501
        :type project_instance: Instance
        :param module: The module of this InstanceModule.  # noqa: E501
        :type module: Module
        """
        self.openapi_types = {
            'id': str,
            'project_instance': Instance,
            'module': Module
        }

        self.attribute_map = {
            'id': 'id',
            'project_instance': 'project_instance',
            'module': 'module'
        }

        self._id = id
        self._project_instance = project_instance
        self._module = module

    @classmethod
    def from_dict(cls, dikt) -> 'InstanceModule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InstanceModule of this InstanceModule.  # noqa: E501
        :rtype: InstanceModule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this InstanceModule.


        :return: The id of this InstanceModule.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InstanceModule.


        :param id: The id of this InstanceModule.
        :type id: str
        """

        self._id = id

    @property
    def project_instance(self):
        """Gets the project_instance of this InstanceModule.


        :return: The project_instance of this InstanceModule.
        :rtype: Instance
        """
        return self._project_instance

    @project_instance.setter
    def project_instance(self, project_instance):
        """Sets the project_instance of this InstanceModule.


        :param project_instance: The project_instance of this InstanceModule.
        :type project_instance: Instance
        """

        self._project_instance = project_instance

    @property
    def module(self):
        """Gets the module of this InstanceModule.


        :return: The module of this InstanceModule.
        :rtype: Module
        """
        return self._module

    @module.setter
    def module(self, module):
        """Sets the module of this InstanceModule.


        :param module: The module of this InstanceModule.
        :type module: Module
        """

        self._module = module
